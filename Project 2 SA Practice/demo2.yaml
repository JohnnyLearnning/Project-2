AWSTemplateFormatVersion: 2010-09-09 #always the same

Description: Deploy vpc with public and private subnets, nat gateway, routes and a route table

Parameters:

  VpcCIDR:
    Description: my vpc cidr
    Type: String 
    Default: 10.0.0.0/16

  Public1CIDR:
    Description: public subnet CIDR
    Type: String
    Default: 10.0.0.0/24

  Public2CIDR:
    Description: public subnet CIDR
    Type: String
    Default: 10.0.1.0/24

  Private1CIDR:
    Description: public subnet CIDR
    Type: String
    Default: 10.0.100.0/24

  Private2CIDR:
    Description: public subnet CIDR
    Type: String
    Default: 10.0.101.0/24

Resources: 

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags: 
        - Key: Name
          Value: Bjgomes

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags: 
        - Key: Name
          Value: Bjgomes

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway 
      VpcId: !Ref VPC 

  EIP1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags: 
        - Key: Name
          Value: Bjgomes

  EIP2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: Bjgomes

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EIP1.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags: 
        - Key: Name
          Value: Bjgomes

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EIP2.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags: 
        - Key: Name
          Value: Bjgomes

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ]
      CidrBlock: !Ref Public1CIDR
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name
          Value: Bjgomes
      VpcId: !Ref VPC

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ]
      CidrBlock: !Ref Public2CIDR
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name
          Value: Bjgomes
      VpcId: !Ref VPC
  
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ]
      CidrBlock: !Ref Private1CIDR
      Tags: 
        - Key: Name
          Value: Bjgomes
      VpcId: !Ref VPC

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ]
      CidrBlock: !Ref Private2CIDR
      Tags: 
        - Key: Name
          Value: Bjgomes
      VpcId: !Ref VPC

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags: 
        - Key: Name
          Value: Bjgomes
      VpcId: !Ref VPC

  PublicSubnet1RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PublicRoute: 
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway


  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags: 
        - Key: Name
          Value: Bjgomes
      VpcId: !Ref VPC

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags: 
        - Key: Name
          Value: Bjgomes
      VpcId: !Ref VPC

  PrivateSubnet1RTAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1

  PrivateSubnet2RTAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2

  PrivateRoute1: 
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1

  PrivateRoute2: 
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2
